<HTML>
 <HEAD>
 <TITLE> DataReel Open Source Readme File </TITLE>
 </HEAD>
 <BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">
 <P>&nbsp;</P>
 <!-- Start company logo -->
 <center>
 <img src="images/drlogo1.jpg">
 </center><!-- End company logo -->
 <!-- Start Menu -->
 <table bgcolor=black border=0 cellpadding=0 cellspacing=0 width=100%><tr><td><table border=0 cellpadding=2 cellspacing=1 width=100%><tr align=center bgcolor=eeeeee>
 <td width=11%><font size=-1 face=arial><a href="index.htm">Index</a></font></td>
 <td bgcolor=A0CCFF width=11%><font size=-1 face=arial><b>Readme</b></font></td>
 <td width=11%><font size=-1 face=arial><a href="classes/classes.htm">Library</a></font></td>
 <td width=11%><font size=-1 face=arial><a href="examples/examples.htm">Examples</a></font></td>
 <td width=11%><font size=-1 face=arial><a href="utils/utils.htm">Utilities</a></font></td>
 </tr></table></td></tr></table>
 <!-- End Menu -->
 <hr noshade size="1" color="#000000">
 
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;Contents</b></font></TD></TD></TR></TABLE>
<!-- End Title Bar -->
<A HREF="#Overview">Overview</A></BR>
<A HREF="#Features">Features</A></BR>
<A HREF="#License">License</A></A></BR>
<A HREF="#SupportedPlatforms">Supported Platforms</A></BR>
<A HREF="#SupportedCompilers">Supported Compilers</A></BR>
<A HREF="#PackageMap">Package Map</A></BR>
<A HREF="#MajorChanges">Major Library Changes in Release 4.X</A></BR>
<A HREF="#Issues">Outstanding Issues in Release 4.X</A><BR>
<A HREF="#Wish">Contributions Needed for Next Release</A><BR>
<A HREF="#ExamplePrograms">Example Programs</A></BR>
<A HREF="#Documentation">Documentation</A></BR>
<A HREF="#Unzipping">Unzipping</A></BR>
<A HREF="#BCCLIB">Building BCC Static WIN32 Library</A></BR>
<A HREF="#MSVCDLL">Building MSVC/C++.NET DLL</A></BR>
<A HREF="#MSVCLIB">Building MSVC Static Library</A></BR>
<A HREF="#UNIXLIB">Building UNIX Share/Static Libraries</A></BR>

<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Overview">Overview</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
<B>What is DataReel?</B><BR>
Datareel is a comprehensive cross-platform C++ development kit used to
build multi-threaded database and communication applications. C++ is a
programming language that produces fast executing compiled programs
and offers very powerful programming capabilities. Unlike interpreted
languages such as JAVA and PERL the C++ language by itself does not
contain built-in programming interfaces for database, communications,
and multi-threaded programming. By using DataReel you can extend the
power of the C++ programming language by using high-level programming
interfaces for database, communications, and multi-threaded
programming.    
<P>
The DataReel development package was produced by independent work and
contract work released to the public through non-exclusive license
agreements. The initial work began independently in 1997 and was
augmented from 1999 to 2004 by code produced under contract to support
various applications. Several developers throughout the World have
made contributions to enhance the DataReel code and promote its
stability. In 2005 the DataReel code library underwent intense
analysis to produce a bulletproof code base suitable for use in
complex commercial applications.    
<P>
<B>Why Use DataReel?</B><BR>
DataReel simplifies complex time consuming database, socket, and
multi-threaded programming tasks by providing JAVA like programming
interfaces for database, communications, and multi-threaded
programming. Using DataReel you can harness the full power of the C++
programming language and build stable end-user applications, embedded
systems, and reusable libraries for multiple operating systems.       
<P>
DataReel is flexible. Using DataReel gives your developers the
flexibility to develop core application components independently of
complex user interfaces. DataReel is portable. DataReel not only
offers portability but also interoperability between multiple
platforms. DataReel is modular. DataReel is a modular approach to
network and database programming making code adaptation and
cross-platform testing easy. 
<P>
<B>Who Can Use DataReel?</B><BR>
The DataReel toolkit is available to commercial, individual, and
academic developers. The DataReel code base is distributed to the
public in an open source format. This keeps the code stable through
the continued support of worldwide developers who submit code
enhancements and report potential problems. The open source format is
also intended to promote the C++ programming language as the language
of choice for any programming task.
<P>
<B>Who Can Contribute?</B><BR>
The DataReel project accepts bug fixes, enhancements, and additions
from all developers. Submissions can be sent directly to the DataReel
Software Development Team via email or online using Web forms. Please
visit the DataReel Website at http://www.datareel.com for the current
team contact information.
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Features">Features</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="1">
<TR>
<font face=arial>
<TD WIDTH=25% BGCOLOR="FFFFFF"><center><b>Database</b></center></TD>
<TD WIDTH=25% BGCOLOR="FFFFFF"><center><b>Sockets</b></center></TD>
<TD WIDTH=25% BGCOLOR="FFFFFF"><center><b>Threads</b></center></TD>
<TD WIDTH=25% BGCOLOR="FFFFFF"><center><b>General</b></center></TD>
</font>
</TR>
<TR>
<TD WIDTH=25% BGCOLOR="FFFFFF">
<font size=-1 face=arial>
&nbsp;WIN32/UNIX Interoperability<BR>
&nbsp;32-Bit DB Engine<BR>
&nbsp;64-Bit DB Engine<BR>
&nbsp;Large file support<BR>
&nbsp;CRC Checking<BR>
&nbsp;Portable File Locking<BR>
&nbsp;Portable Record Locking<BR>
&nbsp;B-tree Indexing<BR>
&nbsp;Persistent Objects<BR>
&nbsp;Supports OODM Design<BR>
&nbsp;Supports RDBMS Design<BR>
&nbsp;Supports Multi-threading<BR>
&nbsp;Supports Client/Server Apps<BR>
&nbsp;Built-in Network Database<BR>
&nbsp;Real-time TCP Streaming<BR>
&nbsp;Real-time UDP Streaming<BR>
&nbsp;RS232 streaming<BR>
</font>
</TD>
<TD WIDTH=25% BGCOLOR="FFFFFF">
<font size=-1 face=arial>
&nbsp;WIN32/UNIX Interoperability<BR>
&nbsp;Winsock/BSD Wrappers<BR>
&nbsp;Object-Oriented Design<BR>
&nbsp;Stream Sockets<BR>
&nbsp;Datagram Sockets<BR>
&nbsp;RS232 Support<BR>
&nbsp;Supports Multi-threading<BR>
&nbsp;Embedded Ping<BR>
&nbsp;Embedded FTP<BR>
&nbsp;Embedded Telnet<BR>
&nbsp;Embedded SMTP<BR>
&nbsp;Embedded POP3<BR>
&nbsp;Embedded HTTP<BR>
&nbsp;URL Parsing<BR>
&nbsp;HTML Parsing<BR>
&nbsp;HTML Generator<BR>
&nbsp;Embedded SSL<BR>
&nbsp;XML Parsing<BR>
</font>
</TD>
<TD WIDTH=25% BGCOLOR="FFFFFF">
<font size=-1 face=arial>
&nbsp;WIN32/UNIX Interoperability<BR>
&nbsp;Windows/POSIX Wrappers<BR>
&nbsp;Object-Oriented Design <BR>
&nbsp;Thread Creation/Construction <BR>
&nbsp;Thread Destruction <BR>
&nbsp;Cancellation <BR>
&nbsp;Exit <BR>
&nbsp;Join <BR>
&nbsp;Suspend <BR>
&nbsp;Resume <BR>
&nbsp;Sleep <BR>
&nbsp;Priority Functions <BR>
&nbsp;Thread Specific Storage <BR>
&nbsp;Thread Pooling<BR>
&nbsp;Mutex Locks <BR>
&nbsp;Conditional Variables <BR>
&nbsp;Semaphore Synchronization<BR>
</font>
</TD>
<TD WIDTH=25% BGCOLOR="FFFFFF">
<font size=-1 face=arial>
&nbsp;String Classes<BR>
&nbsp;Memory Buffers<BR>
&nbsp;Device Caching<BR>
&nbsp;Linked List Classes<BR>
&nbsp;Binary Search Tree<BR>
&nbsp;Stack Classes<BR>
&nbsp;Queue Classes<BR>
&nbsp;Date/Time Classes<BR>
&nbsp;Configuration Manager<BR>
&nbsp;Log Generator<BR>
&nbsp;Postscript Text Generator<BR>
&nbsp;Portable TERM I/O<BR>
&nbsp;Text Utilities<BR>
&nbsp;String Utilities<BR>
&nbsp;Portable Directory Funcitons<BR>
&nbsp;Portable File Functions<BR>
</font>
</TD>
</TR>
</TABLE>
<P>

<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="License">License</A></A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The DataReel open source library is copyrighted by DataReel Software
Development, Copyright &copy; 2001-2009, all rights reserved. DataReel
is a registered trademark &reg; of DataReel Software Development. 
DataReel open source is available to non-profit, commercial, individual, and
academic developers. The open-source archive is distributed under the <A
HREF="http://www.opensource.org">OSI</A>
approved <A
HREF="http://www.gnu.org">GNU</A> Lesser General Public License (LGPL)
with provisions for use in commercial and non-commercial applications
under the terms of the LGPL. 
<P>
Under the terms of the LGPL you can use the open source code in
commercial applications as a static or dynamically linked
library. This allows commercial developers to compile the library and
link to it without making any changes to the DataReel source code.
<P>
<a href="license.txt">GNU Lesser General Public License</a><BR>
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later
version. 
<P>
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details. 
<P>
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
02111-1307 USA 
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="SupportedPlatforms">Supported Platforms</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The following is the current list of operating systems used for
development and cross-platform testing. If the operating system you
are using is not listed please contact the DataReel support team as
this list may change without notice. 
<P>
<B>Original and Supported Platforms</B>
<UL> 
<P>
<LI>HPUX 10.20 
<LI>HPUX 11.0 
<LI>MSDOS 6.22 (Limited Support) 
<LI>RedHat Linux 5.X/6.X/7.X/8.0/9.0/Fedora Core 2-4/Enterprise 2.1-4.0
<LI>Solaris 2.8 
<LI>Windows 95A/95C 
<LI>Windows 98/98SE 
<LI>Windows NT 4.0 SP4-6 
<LI>Windows ME 
<LI>Windows 2000 SP2-SP4
<LI>Windows 2000 Server SP2-SP4
<LI>Windows XP Home/Professional 
<LI>Windows 2003 Server
</UL>

DataReel release 4.X final deployment UNIX testing was preformed under RedHat
Enterprise Linux 4.0 gcc version 3.4.4 20050721 (Red Hat 3.4.4-2)
2.6.9-22.Elsmp Kernel. Development system used was a RedHat certified
Dell Precision workstation with 1G of system memory.
<P>
DataReel release 4.X final deployment Windows testing was preformed under
Windows XP professional using the Microsoft Visual C++ compiler
version 6.0 SP6 and MS Visual C++ .NET version 7. Development system
used was a Dell Optiplex desktop with 1G of system memory.
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="SupportedCompilers">Supported
Compilers</A></b></font>
</TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The following is the current list of compilers used for development
and cross-platform testing. If the compiler you are using is not
listed please contact the DataReel support team as this list may
change without notice. 
<P>
<B>C++ Compiler list</B>
<UL>
<P>
<LI>HPUX Native C++ Compiler - HP C++ HPCPLUSPLUS A.10.27
<LI>HPUX Native C++ Compiler - HP aC++ B3910B A.03.30 compiled for HP-UX 11.0 
HP aC++ B3910B A.03.27 Language Support Library
<LI>16-Bit MSDOS C++ Compiler - MSVC 1.52 (Limited Support)
<LI>32-Bit MSDOS C++ Compiler - DJGPP 2.7.2.1 (Limited Support)
<LI>32-Bit Windows C++ Compiler - MSVC 4.2, MSVC 5.0, MSVC 6.0 SP6, MS Visual C++ .NET, BCC32 5.X, BCC32 6.0 
<LI>gcc version 3.4.4 20050721 (Red Hat 3.4.4-2)
<LI>Solaris Native C++ Compiler - Sun C++ 5.0 (4.2 compatibility mode)
</UL>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="PackageMap">Package Map</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The DataReel Windows and UNIX archives are identical and can be
unpacked on either platform depending on the decompression tools
available to you. In order to remain consistent with multiple
archiving schemes all files and directories conform to the ISO
9660 8.3 naming convention. The directory structure for the
distribution is as follows: 
<P>
<B>DataReel Directory</B>
<UL>
<LI>bin - Empty directory used to intall executables</LI>
<LI>contrib - Directory used to install contribution packages</LI>
<LI>dll - Build directory for WIN32 DLLs</LI>
<LI>docs - Directory for all DataReel documentation sets</LI>
<LI>env - Makefile includes used to build libraries and example
programs</LI>
<LI>examples.gen - General support example programs</LI>
<LI>examples.db - Database example programs</LI>
<LI>examples.mt - Thread example programs</LI>
<LI>examples.soc - Socket example programs</LI>
<LI>include - DataReel include files</LI>
<LI>lib - Empty directory used to install library files</LI>
<LI>src - DataReel source code files</LI>
<LI>unixlib - Build directory for UNIX static/shared libraries</LI>
<LI>utils - DataReel utility programs</LI>
<LI>winslib - Build directory for static WIN32 libraries</LI>
</UL>

<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="MajorChanges">Major Library Changes in Release 4.X</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
<UL>
<LI>Added Unicode support to the DataReel string class that allows the use of ASCII and Unicode strings
<LI>Relase 4 includes a new relational database manager and several
RDBMS classes
<LI>A new gxDatabase debug manager class was added to support database debug operations in OODBM and RDBMS implementations
<LI>Added gxSSL class to support HTTPS client and server applications 
</UL>
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Issues">Outstanding Issues in Release 4.X</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
Items pending following this public release version. 
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Wish">Contributions needed for next release
</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
<UL>
<LI>HPUX and Solaris beta testers 
<LI>Add MSVC project files for the Visual Studio IDE
<LI>Add UNIX configure scripts
<LI>Start IPV6 testing and add the IP128 class
</UL>
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="ExamplePrograms">Example Programs</A></b></font>
</TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The DataReel library includes over 100 console based example
programs. The examples are fully functional programs used to test
and demonstrate each component of the library individually. The
example programs are located within subdirectories of the
"examples.gen", "examples.db", "examples.mt", and "examples.soc"
directories. <B>NOTE</B>: In release 4.X you must build the
DataReel library before building any of the example or utility
programs. All examples and utilities are built using an include
makefile located in the env subdirectory. 
<P>
<B>WIN32 Makefiles</B><BR>
msvc.mak - Microsoft Visual C/C++ 6.0 SP6 or Microsoft Visual C++
.NET<BR>
bcc32.mak - Borland BCC32 5.5<BR>
<P>
<P>
<B>UNIX Makefiles</B><BR>
hpux10.mak - HPUX front-end compiler<BR>
hpux11.mak - HPUX aCC compiler<BR> 
linux.mak - gcc compiler<BR>
solaris.mak - Sun WorkShop C++ compiler<BR>
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Documentation">Documentation</A></b></font>
</TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The DataReel 4.X documentation set covers the class library,
example programs, and the utility programs. The class library is
documented by category with a detailed description and usage note
for each function. The DataReel example programs have been
converted to an HTML format with comments/remarks denoted by red
lettering. Utility programs are documented with a brief
description and usage information. 
<P>
The complete DataReel 4.X documentation set is available in an
HTML format. The DataReel HTML documentation set is distributed with
each DataReel source code distribution. Updated versions and all
changes are posted to the DataReel Web Site: 
<P>
<a href="http://www.datareel.com/documentation/">http://www.datareel.com/documentation/</a>
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="Unzipping">Unzipping</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The entire DataReel distribution requires approximately 8 MB of
free disk space to unpack. Two distributions are available, one
for Windows and one for UNIX. The DataReel Windows and UNIX
archives are identical and can be unpacked on either platform
depending on the decompression tools available to you. 
<P>
<B>Windows Installation</B><BR>
To unpack this distribution on a Windows platform you will need a
copy of PKZIP version 2.03 for DOS or <A HREF="http://www.winzip.com">WINZIP</a> version 6.1 or
higher for WIN32. To unzip using PKZIP 2.03 follow these
instructions: 
<PRE>
C:\>mkdir datareel
C:\>copy dreelXXX.zip c:\datareel
C:\>cd datareel
C:\datareel>pkunzip -d dreelXXX.zip
</PRE>

<B>UNIX Installation</B><BR>
To unpack this distribution you need a copy <A HREF="http://www.gnu.org/software/gzip/gzip.html">GZIP/GUNZIP</A> version
1.2.4 or higher. To unpack using GZIP and the UNIX tar utility
follow these instructions: 
<PRE>
% gzip -d dreelXXX.tgz
% tar xvf dreelXXX.tar
</PRE>
To unpack using GUNZIP and the UNIX tar utility follow these
instructions:
<PRE>
% gunzip dreelXXX.tgz 
% tar xvf dreelXXX.tar
</PRE>
To unpack using the UNIX uncompress utility follow these
instructions:
<PRE>
% zcat dreelXXX.tar.Z | tar xvf -
</PRE>
<B>NOTE</B>: You can also use the UNIX uncompress utility to unpack GZIP
files:
<PRE>
% zcat dreelXXX.tgz | tar xvf -
</PRE>
<B>NOTE</B>: You can also use UNZIP for UNIX version 5.12 or higher to
unpack the zip archive: 
<PRE>
% mkdir datareel
% cp dreelXXX.zip datareel/dreelXXX.zip
% cd datareel

% unzip -a -L dreelXXX.zip
</PRE>
The unzip "-a" option will auto-convert all text files to a UNIX
format and the "-L" option will make the directory and file names
all lower case. 
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="BCCLIB">Building BCC Static WIN32 Library</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The BCC32 makefiles requires you to build the BCC static library
are located in the winslib subdirectory. To build the library
using the BCC make utility execute the following command: 
<PRE>
C:\DataReel\winslib>make -f bcc32.mak 
</PRE>
This will build the 32-bit static library. To build the 64-bit
library you must uncomment the following line in the
winslib\bcc32.env file and rebuild the static library:
<PRE>
64BIT_DEFMACS = -D__64_BIT_DATABASE_ENGINE__

C:\DataReel\winslib>make -f bcc32.mak clean
C:\DataReel\winslib>make -f bcc32.mak
</PRE>
<B>NOTE</B>: Before building the example programs or the utility
programs using the BCC compiler you must set the absolute path to
the DataReel library in the env\bcc.mak file: 
<PRE>
GCODE_LIB_DIR = C:\DataReel 
</PRE>
If you are using the Borland IDE to build the library, examples,
or utility programs please refer to the winslib\bcc32.env file
for the required preprocessor directives, library dependencies,
compiler and linker flags. 
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="MSVCDLL">Building MSVC/C++.NET DLL</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The MSVC/C++.NET makefiles requires you to build the MSVC DLL are
located in the dll subdirectory. To build the DLL using the MSVC/
C++.NET nmake utility execute the following command: 
<PRE>
C:\DataReel\dll>nmake -f msvc.mak 
</PRE>
The will build both the 32-bit release and debug DLLs and place
them in the C:\DataReel\dll\release and C:\DataReel\dll\debug
directories. If you are using the MSVC or C++.NET Visual Studio
to build the library, examples, or utility programs please refer
to the dll\msvc.env file for the required preprocessor
directives, library dependencies, compiler and linker flags. 
<P>
To build the 64-bit DLL execute the following commands:
<PRE>
C:\DataReel\dll>nmake -f msvc.mak clean
C:\DataReel\dll>nmake -f msvc.mak 64BITCFG=1
</PRE>
<B>NOTE</B>: Before any dynamically linked executable can be launched you must install the
DLL or set a path to the DLL. The DLL can be installed in the
directory with the executable, in the Windows system directory,
or be visible in any set path. To set the DLL path for the
current console window execute the following command:
<PRE>
C:\>set path=%path%;C:\DataReel\dll\release;C:\DataReel\dll\debug
</PRE>
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="MSVCLIB">Building MSVC Static Library</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
To build the
static library using the MSVC/C++.NET nmake utility execute the
following command: 
<PRE>
C:\DataReel\winslib\>nmake -f msvc.mak 
</PRE>
This will build the 32-bit debug library. To build the release
library utility execute the following commands:
<PRE>
C:\DataReel\winslib\>nmake -f msvc.mak clean
C:\DataReel\winslib\>nmake -f msvc.mak FINAL=1
</PRE>
To build the 64-bit static library execute the following
commands:
<PRE>
C:\DataReel\winslib\>nmake -f msvc.mak clean
C:\DataReel\winslib\>nmake -f msvc.mak FINAL=1 64BITCFG=1
</PRE>
If you are using the MSVC or C++.NET Visual Studio to build the
library, examples, or utility programs please refer to the
winslib\msvc.env file for the required preprocessor directives,
library dependencies, compiler and linker flags. 
<P>
<B>NOTE</B>: None of the example or utility programs will link to the
MSVC/C++.NET static library. If wish to link to the static
library instead of the dynamic one you must modify the msvc
include makefile located in the env subdirectory. 
<P>
<hr noshade size="1" color="#000000">
<!-- Begin Title Bar -->
<TABLE WIDTH="100%" CELLPADDING="0" BORDER="0"><TR>
<TD BGCOLOR="A0CCFF"><font face="Arial,Helvetica,Sans-serif">
<b>&nbsp;<A NAME="UNIXLIB">Building UNIX Share/Static Libraries</A></b></font></TD></TR></TABLE>
<!-- End Title Bar -->
<P>
The UNIX makefiles requires you to build the UNIX static/shared
libraries located in the unixlib subdirectory. To build the
library using the UNIX make utility execute the following command
for one of the supported UNIX platforms: 
<PRE>
% make -f linux.mak
% make -f solaris.mak
% make -f hpux10.mak
% make -f hpux11.mak 
</PRE>
This will generate the "libgxcode.a" static 32-bit library and
the "libgxcode.so.4.X" shared 32-bit library. To build the 64-bit
library for Linux, Solaris, or HPUX 11 you must uncomment the
following line in the unixlib/linux.mak, unixlib/solaris.mak, or
unixlib/hpux11.mak makefile and rebuild the library:
<PRE>
64BIT_DEFMACS = -D__64_BIT_DATABASE_ENGINE__ -D_LARGEFILE64_SOURCE

% make -f linux.mak clean
% make -f linux.mak

% make -f solaris.mak clean
% make -f solaris.mak

% make -f hpux11.mak clean
% make -f hpux11.mak
</PRE>
<B>NOTE</B>: By default the example and utility programs will link to
the static version unless the libgxcode.so.4.X is symbolically
linked or renamed to libgxcode.so in the unixlib build directory.
Before executing any executable linked to a shared UNIX library
you must make the library visible to the system's dynamic loader.
To do this either install the library in a default lib directory
such as /usr/local/lib, /usr/lib, /lib or set the LD_LIBRARY_PATH
environment variable equal to the absolute path of the directory
containing the library. <B>NOTE</B>: Before setting the LD_LIBRARY_PATH 
check to see if the variable has already been set:
<PRE>
echo $LD_LIBRARY_PATH 

If the LD_LIBRARY_PATH variable is not set execute one of the 
following commands depending on which shell you are using:

/bin/csh
setenv LD_LIBRARY_PATH /usr/local/datareel/dreelXXX/lib

/bin/sh
LD_LIBRARY_PATH=/usr/local/datareel/dreelXXX/lib 
export LD_LIBRARY_PATH

If the LD_LIBRARY_PATH variable is set execute one of the following 
commands depending on which shell you are using:

/bin/csh
setenv LD_LIBRARY_PATH /usr/local/datareel/dreelXXX/dlib:${LD_LIBRARY_PATH}
   
/bin/sh   
LD_LIBRARY_PATH=/usr/local/datareel/dreelXXX/dlib:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH
</PRE>
To install the library in the DataReel lib directory execute a
"make install" from the command line. This will copy the
libgxcode.a and libgxcode.so.4.X files to the DataReel lib
directory and create a symbolic link from libgxcode.so.4.X to
libgxcode.so. <B>NOTE</B>: When a UNIX compiler sees both a static and
shared library in the same directory it will always link to the
shared library first. 
<P>
<hr noshade size="1" color="#000000">
<!-- Start Copyright Information -->
<font color="000000">DataReel Copyright &copy; 2001-2009 DataReel
Software Development, All Rights Reserved
<BR>
DataReel is a registered trademark &reg; of DataReel Software Development
</font>
<!-- End Copyright Information -->

 <P>&nbsp;</P>

 </BODY>
 </HTML>
